# Text file with RIP read counts is on the desktop 

# Open R studio 3.6.3

library("gplots")
library("RColorBrewer")
library("genefilter")
library("ggplot2")
library("DESeq2)

countsTable <- read.csv("/Users/ananyamahapatra/Desktop/finalRIPs.csv", header = TRUE, row.names = 1)
experimentData <- read.csv("/Users/ananyamahapatra/Desktop/experiment.csv", header=TRUE, sep = ",")   # experiments.txt file is where you assign the conditions/samples etc
rownames(experimentData) <- experimentData$sample
dds <- DESeqDataSetFromMatrix(countData = countsTable, colData = experimentData, design = ~ assay + condition + assay:condition)

dds$condition <- factor(dds$condition, levels=c("Ctrl","ADR1")) 

dds <- DESeq(dds, test="LRT", reduced = ~ 1)

res_LRT <- results(dds, test="LRT")

length(which(res_LRT$padj <= 0.05)) 
#this allows to select for genes that have padj lower than 0.05 and prints the number on R. 8626

write.table(res_LRT, file="/Users/ananyamahapatra/Desktop/DESeq2_LRT_Results_RIPsAM.tsv", quote=FALSE, sep="\t", na="NA", col.names=NA)

normcounts <- counts(dds, normalized=T)

write.table(normcounts, file="/Users/ananyamahapatra/Desktop/normalized_countstableRIPs", quote=FALSE, sep="\t", col.names=NA)

sizefactors <- sizeFactors(dds)

write.table(sizefactors, file="/Users/ananyamahapatra/Desktop/SizeFactors_RIPs.txt", quote=FALSE, sep="\t", col.names=NA)

# files are on desktop now

plotPCA_ram <- function(object, intgroup = "condition", ntop = 500, returnData = FALSE) {
 rv <- rowVars(assay(object))
 select <- order(rv, decreasing = TRUE)[seq_len(min(ntop, length(rv)))]
 pca <- prcomp(t(assay(object)[select, ]))
 percentVar <- pca$sdev^2/sum(pca$sdev^2)
write.table(percentVar, file="explained_variance.txt", quote=FALSE, sep="\t", col.names=NA)
 if (!all(intgroup %in% names(colData(object)))) {
             stop("the argument 'intgroup' should specify columns of colData(dds)")
         }
 intgroup.df <- as.data.frame(colData(object)[, intgroup,
             drop = FALSE])
         group <- if (length(intgroup) > 1) {
             factor(apply(intgroup.df, 1, paste, collapse = ":"))
         }
         else {
             colData(object)[[intgroup]]
         }
         d <- data.frame(PC2 = pca$x[, 2], PC3 = pca$x[, 3], group = group,
             intgroup.df, name = colnames(object))
         if (returnData) {
             attr(d, "percentVar") <- percentVar[2:3]
             return(d)
         }
         ggplot(data = d, aes_string(x = "PC2", y = "PC3", color = "group")) +
             geom_point(size = 3) + xlab(paste0("PC2: ", round(percentVar[2] *
             100), "% variance")) + ylab(paste0("PC3: ", round(percentVar[3] *
             100), "% variance")) + coord_fixed()
     }
# lines 37-64 have to be pasted in R at the same time to avoid any errors 
