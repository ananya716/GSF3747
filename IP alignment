
gunzip GSF-3747*

conda activate pathogenripseq

ASSEMBLY='ftp://ftp.wormbase.org/pub/wormbase/releases/WS275/species/c_elegans/PRJNA13758/c_elegans.PRJNA13758.WS275.genomic.fa.gz'
ANNOTATION='ftp://ftp.wormbase.org/pub/wormbase/releases/WS275/species/c_elegans/PRJNA13758/c_elegans.PRJNA13758.WS275.canonical_geneset.gtf.gz'

################################
## Generate STAR Genome Index ##
################################

# Make a directory to store the genome files.

mkdir -p genome

# Download and unpack the genome assembly.

curl $ASSEMBLY | gunzip > ./genome/assembly.fasta

# Download and unpack the genome annotation.

curl $ANNOTATION | gunzip > ./genome/annotation.gtf

# Create a directory to store the index.

mkdir -p genome/index

# Create the STAR genome index.
# --genomeSAindexNbases 12 was recommended by software.

module load star

STAR \
  --runThreadN 4 \
  --runMode genomeGenerate \
  --genomeDir genome/index \
  --genomeFastaFiles genome/assembly.fasta \
  --sjdbGTFfile genome/annotation.gtf \
  --genomeSAindexNbases 12

###########################
## Align Reads to Genome ##
###########################

# Create an output directory for aligned reads.

mkdir -p results/aligned

# Align the reads.

FASTQ=$GSF3747*

for FASTQ in ${FASTQ[@]}; do
  PREFIX=results/aligned/$(basename $FASTQ .fastq)_
  STAR \
    --runThreadN 8 \
    --outFilterMultimapNmax 1 \
    --outFilterScoreMinOverLread .66 \
    --outFilterMismatchNmax 10 \
    --outFilterMismatchNoverLmax .3 \
    --runMode alignReads \
    --genomeDir genome/index \
    --readFilesIn $FASTQ \
    --outFileNamePrefix $PREFIX \
    --outSAMattributes All \
    --outSAMtype BAM SortedByCoordinate
done 

# Indexing the BAM files.

BAMS=($(find ./results/aligned -name "*\.bam"))

for BAM in ${BAMS[@]}; do
  samtools index $BAM
  done

  ####################
## Count Features ##
####################

# Create an output directory for read counts.

mkdir -p results/counts

# Count reads.

BAMS=$(find ./results/aligned -name "*\.bam")

featureCounts \
  -a genome/annotation.gtf \
  -o results/counts/counts.tsv \
  -t gene \
  -g gene_id \
  --largestOverlap \
  --readExtension3 150 \
  --primary \
  -s 2 \
  -T 8 \
  ${BAMS}
  
#Transfer file to desktop

On local terminal, type cd Desktop
scp amahapat@quartz.uits.iu.edu:/N/slate/amahapat/pathogenRIPs/results/counts/counts.tsv .

Proceeded to do DESeq2 on R studio

  library(gplots)
  library(RColorBrewer)
  library(genefilter)
  library(ggplot2)
  library(DESeq2)
> countsTable <- read.csv("/Users/ananyamahapatra/Desktop/RIPs counts.csv", header = TRUE, row.names = 1)
> experimentData <- read.csv("/Users/ananyamahapatra/Desktop/IP experiment.csv", header=TRUE, sep = ",")
> rownames(experimentData) <- experimentData$sample
> dds <- DESeqDataSetFromMatrix(countData = countsTable, colData = experimentData, design = ~ assay + condition + assay:condition)
> dds$condition <- factor(dds$condition, levels=c("Ctrl","ADR1")) 
> dds <- DESeq(dds, test="LRT", reduced = ~ 1)
estimating size factors
estimating dispersions
gene-wise dispersion estimates
mean-dispersion relationship
final dispersion estimates
fitting model and testing
> res_LRT <- results(dds, test="LRT")
> length(which(res_LRT$padj <= 0.05)) 


